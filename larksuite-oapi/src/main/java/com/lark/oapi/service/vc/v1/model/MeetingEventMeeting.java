// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.vc.v1.model;

import com.google.gson.annotations.SerializedName;

public class MeetingEventMeeting {

  @SerializedName("id")
  private String id;
  @SerializedName("topic")
  private String topic;
  @SerializedName("meeting_no")
  private String meetingNo;
  @SerializedName("start_time")
  private String startTime;
  @SerializedName("end_time")
  private String endTime;
  @SerializedName("host_user")
  private MeetingEventUser hostUser;
  @SerializedName("owner")
  private MeetingEventUser owner;

  // builder 开始
  public MeetingEventMeeting() {
  }

  public MeetingEventMeeting(Builder builder) {
    this.id = builder.id;
    this.topic = builder.topic;
    this.meetingNo = builder.meetingNo;
    this.startTime = builder.startTime;
    this.endTime = builder.endTime;
    this.hostUser = builder.hostUser;
    this.owner = builder.owner;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public String getId() {
    return this.id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public String getTopic() {
    return this.topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }

  public String getMeetingNo() {
    return this.meetingNo;
  }

  public void setMeetingNo(String meetingNo) {
    this.meetingNo = meetingNo;
  }

  public String getStartTime() {
    return this.startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public String getEndTime() {
    return this.endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public MeetingEventUser getHostUser() {
    return this.hostUser;
  }

  public void setHostUser(MeetingEventUser hostUser) {
    this.hostUser = hostUser;
  }

  public MeetingEventUser getOwner() {
    return this.owner;
  }

  public void setOwner(MeetingEventUser owner) {
    this.owner = owner;
  }

  public static class Builder {

    private String id;
    private String topic;
    private String meetingNo;
    private String startTime;
    private String endTime;
    private MeetingEventUser hostUser;
    private MeetingEventUser owner;

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder topic(String topic) {
      this.topic = topic;
      return this;
    }

    public Builder meetingNo(String meetingNo) {
      this.meetingNo = meetingNo;
      return this;
    }

    public Builder startTime(String startTime) {
      this.startTime = startTime;
      return this;
    }

    public Builder endTime(String endTime) {
      this.endTime = endTime;
      return this;
    }

    public Builder hostUser(MeetingEventUser hostUser) {
      this.hostUser = hostUser;
      return this;
    }

    public Builder owner(MeetingEventUser owner) {
      this.owner = owner;
      return this;
    }


    public MeetingEventMeeting build() {
      return new MeetingEventMeeting(this);
    }
  }
}
